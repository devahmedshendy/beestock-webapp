# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2  # This indicates a circleci version
jobs:
  build:
    working_directory: ~/app

    docker:
      - image: docker:18.03.0-ce-git

    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip
            pip install awscli==1.14.30

      - run:
          name: Build Docker image
          command: docker build -t dev-beestock-webapp .
          working_directory: ./vuejs-app

      - deploy:
          name: Push Docker Image to AWS ECR
          command: |
            if [ "${CIRCLE_BRANCH}" == "immutable-infra" ] || [ "${CIRCLE_BRANCH}" == "shendy-develop" ]; then
              AWS_REGION='us-east-2'
              CLUSTER='dev-beestock'
              TASK='dev-webapp'
              FAMILY='dev-webapp'
              SERVICE='webapp-service'
              CONTAINER_NAME='dev-webapp'
              DOCKER_IMAGE='dev-beestock-webapp'

              aws configure set region $AWS_REGION
              $(aws ecr get-login --no-include-email --region $AWS_REGION)

              docker tag $DOCKER_IMAGE $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE:latest
              docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE:latest

              docker tag $DOCKER_IMAGE $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE:$CIRCLE_SHA1
              docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE:$CIRCLE_SHA1

              task_template='[
                {
                  "name": "%s",
                  "image": "%s.dkr.ecr.%s.amazonaws.com/%s:latest",
                  "essential": true,
                  "cpu": 10,
                  "memory": 300,
                  "portMappings": [
                    {
                      "containerPort": 8080,
                      "hostPort": 8080
                    }
                  ]
                }
              ]'

              task_def=$(printf "$task_template" $CONTAINER_NAME $AWS_ACCOUNT_ID $AWS_REGION $DOCKER_IMAGE)

              json=$(aws ecs register-task-definition --container-definitions "$task_def" --family "$FAMILY")

              revision=$(echo "$json" | grep -o '"revision": [0-9]*' | grep -Eo '[0-9]+')

              aws ecs update-service --force-new-deployment --cluster "$CLUSTER" --service "$SERVICE" --task-definition "$TASK":"$revision"

              return 0
            fi